<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:notify="clr-namespace:TextLocator.NotifyIcon"
                    xmlns:tb="http://www.hardcodet.net/taskbar">
    <!-- 资源字典合并 -->
    <ResourceDictionary.MergedDictionaries>
        <!-- Rubyer -->
        <ResourceDictionary Source="pack://application:,,,/Rubyer;component/Themes/Resources/I18N/en-US.xaml" />
        <!--<ResourceDictionary Source="pack://application:,,,/Rubyer;component/Themes/Generic.xaml" />-->
        <!-- <ResourceDictionary Source="pack://application:,,,/Rubyer;component/Themes/Resources/I18N/en-US.xaml" /> -->
        


        <!-- RegularTool -->
        <ResourceDictionary Source="/RegularTool;component/Styles/TreeViewStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Color x:Key="LightDefaultForegroundColor">#252526</Color>
    <Color x:Key="DarkDefaultForegroundColor">#E6E6E6</Color>
    <SolidColorBrush x:Key="DefaultForeground" Color="{DynamicResource LightDefaultForegroundColor}" />

    <Color x:Key="LightDefaultBackgroundColor">#FFFFFF</Color>
    <Color x:Key="DarkDefaultBackgroundColor">#1E1E1E</Color>
    <SolidColorBrush x:Key="DefaultBackground" Color="{DynamicResource LightDefaultBackgroundColor}" />

    <Color x:Key="LightContainerBackgroundColor">#FFFFFF</Color>
    <Color x:Key="DarkContainerBackgroundColor">#2D2D2D</Color>
    <SolidColorBrush x:Key="ContainerBackground" Color="{DynamicResource DarkContainerBackgroundColor}" />



    <SolidColorBrush x:Key="Error" Color="#E63935" />
    <SolidColorBrush x:Key="Info" Color="#909399" />
    <SolidColorBrush x:Key="Warning" Color="#F57C00" />
    <SolidColorBrush x:Key="Success" Color="#43A047" />
    <SolidColorBrush x:Key="Question" Color="#2196F3" />

    <!-- ✅ Rubyer 主题颜色配置结束 -->

    <!-- 托盘图标菜单 -->
    <ContextMenu x:Key="SysTrayMenu">
        <MenuItem Header="Show" Command="{Binding ShowWindowCommand}" />
        <MenuItem Header="Hide" Command="{Binding HideWindowCommand}" />        
        <Separator />
        <MenuItem Header="Hotkey" Command="{Binding ShowHotKeyWindowCommand}" />
        <MenuItem Header="Setting" Command="{Binding ShowSettingWindowCommand}" />
        <MenuItem Header="Help" Command="{Binding HelpWindowCommand}" />
        <Separator />
        <MenuItem Header="Exit" Command="{Binding ExitApplicationCommand}" />
    </ContextMenu>
    <!-- 托盘图标 -->
    <tb:TaskbarIcon x:Key="Taskbar" 
                    ToolTipText="TextLocator"
                    IconSource="/Resource/App.ico"
                    DoubleClickCommand="{Binding ShowWindowCommand}"
                    ContextMenu="{StaticResource SysTrayMenu}">
        <tb:TaskbarIcon.DataContext>
            <notify:NotifyIconViewModel/>
        </tb:TaskbarIcon.DataContext>
    </tb:TaskbarIcon>

    
    <!-- 文件类型筛选 -->
    <Style x:Name="FileTypeFilter" TargetType="RadioButton">
        <Setter Property="IsChecked" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid Height="50" Background="{TemplateBinding Background}" ToolTip="{TemplateBinding ToolTip}"  Width="{TemplateBinding Width}" Margin="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="11*"/>
                            <RowDefinition Height="9*"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="_Rect" Grid.Row="1" Fill="#FFC2C2C5" HorizontalAlignment="Center" Height="5"  VerticalAlignment="Top" Width="88"/>
                        <TextBlock DockPanel.Dock="Left" Margin="0 0 0 0" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="_Rect" Property="Fill" Value="#2196f3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 全局圆角 Button 样式 -->
    <Style TargetType="Button">
        <Setter Property="Background" Value="#2196F3" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Padding" Value="6,2" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        CornerRadius="4"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RecognizesAccessKey="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>